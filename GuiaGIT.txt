REGLA 1: Se tiene que usar la consola para casi todo.
Algunos comandos como el push que da error en el GUI, lo usas en la consola (con todo igual) y funciona
Además los comandos son cortos.

ACTUALIZAR SERVIDOR: (Lo local se pasa al servidor)

1- Abrir GUI  (Todos los cambios salen en "Unstaged Changes")
2- Seleccionar todos los archivos, y hacer: Commit > Stage to commit  ó "Ctrl + T"  (Todos los cambios ahora salen en Stage Changes)
3- Rellenar "Commit Message" y pulsar "Commit"
4- Seleccionar "Push" para actualizar el servidor (Si da error, hacerlo en la consola: git push)


ACTUALIZAR LOCAL: (Se descargan los cambios del servidor)
1- Abrir git bash (Consola)
2- git pull
(Se actualiza a la versión más nueva, es decir no deshace cambios locales recientes. Ver notas si ocurre un conflicto)

Al inicio cuando no tienes nada:

1- Abrir git bash (Consola) en la carpeta donde se va a descargar el proyecto.
2- Escribir Comando: "git clone https://github.com/cheche338/Proyecto/"

ACTUALIZAR UN ÚNICO ARCHIVO (Se descarga el archivo original del servidor y se sustituye en el local)
1- Abrir git bash (Consola)
2- git checkout -- <filename>

DESHACER TODOS LOS CAMBIOS LOCALES Y ACTUALIZAR LOCAL:
1- git fetch
2- git reset --hard

NOTAS:

A) Conflicto al hacer git pull:
	Rara vez hay un conflicto pero estos ocurren si trabajamos paralelamente en un archivo en el mismo 
	código:
		- Git resuelve el conflicto cuando corresponde a partes de códigos distintas.
		- Si no lo logra resolver al hacer pull mostrará el mensaje de conflicto y
		el archivo de conflicto se va a actualizar como el siguiente ejemplo:
	----------------------------------------------------------------------
	<<<<<<< HEAD
	...........Modificaciones paralelas en local......
	.......etc.........etc......etc
	=======
	.....Modificaciones paralelas en servidor.......
	...................etc.......etc......
	>>>>>>> 24e222cf47f29de6e6b2f43caad4e6373220e704
	-----------------------------------------------------------------------
	Solo realizas la unión o sustitución y actualizas ese archivo únicamente en el servidor con el conflicto solucionado
	y ya puedes hacer git pull.